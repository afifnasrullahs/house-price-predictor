name: MLOps Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  data-processing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Data Processing
        run: |
          python src/data/run_processing.py --input data/raw/house_data.csv --output data/processed/cleaned_house_data.csv

      - name: Engineer Features
        run: |
          python src/features/engineer.py --input data/processed/cleaned_house_data.csv --output data/processed/featured_house_data.csv --preprocessor models/trained/preprocessor.pkl

      - name: Upload Processed Data
        uses: actions/upload-artifact@v4
        with:
          name: processed-data
          path: data/processed/featured_house_data.csv

      - name: Upload Preprocessor
        uses: actions/upload-artifact@v4
        with:
          name: preprocessor
          path: models/trained/preprocessor.pkl

  model-training:
    runs-on: ubuntu-latest
    needs: data-processing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11.9"

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Download Processed Data
        uses: actions/download-artifact@v4
        with:
          name: processed-data
          path: data/processed/

      - name: Start MLflow Server
        run: |
          docker run -d -p 5000:5000 --name mlflow-server ghcr.io/mlflow/mlflow:latest mlflow server --host 0.0.0.0 --backend-store-uri sqlite:///mlflow.db

      - name: Wait for MLflow to start
        run: |
          echo "Waiting for MLflow to start..."
          for i in {1..10}; do
            curl -f http://localhost:5000/health && break || sleep 5
          done

      - name: Train Model
        env:
          MLFLOW_TRACKING_URI: http://localhost:5000
        run: |
          python src/models/train_model.py --config configs/model_config.yaml --data data/processed/featured_house_data.csv --models-dir models --mlflow-tracking-uri http://localhost:5000

      - name: Cleanup MLflow
        run: |
          docker stop mlflow-server || true
          docker rm mlflow-server || true
          docker rmi ghcr.io/mlflow/mlflow:latest || true

      - name: Upload Trained Model
        uses: actions/upload-artifact@v4
        with:
          name: trained-model
          path: models/

  build-and-publish:
    runs-on: ubuntu-latest
    needs: model-training
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Trained Model
        uses: actions/download-artifact@v4
        with:
          name: trained-model
          path: models/

      - name: Download Preprocessor
        uses: actions/download-artifact@v4
        with:
          name: preprocessor
          path: models/trained/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:latest
            docker.io/${{ vars.DOCKERHUB_USERNAME }}/house-price-model:${{ github.sha }}

      - name: Logout from DockerHub
        run: docker logout
